block svgAnimSmall
  svg#ejgh9d02f4xc1(xmlns='http://www.w3.org/2000/svg', xmlns:xlink='http://www.w3.org/1999/xlink', height="75" width= "80", shape-rendering='geometricPrecision', text-rendering='geometricPrecision')
    defs
      lineargradient#ejgh9d02f4xc3-fill(x1='13', y1='40', x2='75', y2='40', spreadmethod='pad', gradientunits='userSpaceOnUse')
        stop#ejgh9d02f4xc3-fill-0(offset='0%', stop-color='rgb(34,34,35)')
        stop#ejgh9d02f4xc3-fill-1(offset='100%', stop-color='rgb(253,238,121)')
    g#ejgh9d02f4xc2
      path#ejgh9d02f4xc3(d='M14.667640,67.433705L14.667640,67.433705C14.688356,67.318249,14.688443,67.392662,14.667640,67.433705C14.627848,67.404510,14.567647,67.405357,14.667640,67.433705C14.726874,67.453115,14.655339,67.441628,14.667640,67.433705C14.620214,67.473818,14.735941,67.471756,14.667640,67.433705L14.667640,67.433705L14.667640,67.433705L14.667640,67.433705L14.667640,72.651865L14.667640,72.651865L14.667640,67.433705L14.667640,67.433705C14.726902,67.444080,14.726160,67.353929,14.667640,67.433705C14.664743,67.453055,14.674664,67.447220,14.667640,67.433705ZM25.103960,36.124745C25.139419,36.128306,25.108357,36.165164,25.103960,36.124745C25.125197,36.222029,25.151763,36.235794,25.103960,36.124745C25.090441,36.151189,25.121319,36.210890,25.103960,36.124745L25.103960,36.124745C25.103960,36.124745,25.103960,41.342905,25.103960,41.342905L25.103960,41.342905C25.083754,41.379870,25.194166,41.340618,25.103960,41.342905C25.195963,41.431928,25.183707,41.385663,25.103960,41.400110C25.140543,41.504569,25.122241,41.349241,25.103960,41.400110L25.103960,41.342905C25.061162,41.378766,25.091487,41.411845,25.103960,41.400110Z', transform='matrix(1 0 0 1 -0.50000000000002 -1.40010999999998)', fill='url(#ejgh9d02f4xc3-fill)', stroke='none', stroke-width='1', stroke-miterlimit='10')
    script.
        <![CDATA[!function (t, n) {
            "object" == typeof exports && "undefined" != typeof module ? module.exports = n() : "function" == typeof define && define.amd ? define(n) : (t = t || self).__SVGATOR_PLAYER__ = n()
        }(this, (function () {
            "use strict";

            function t(n) {
                return (t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
                    return typeof t
                } : function (t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(n)
            }

            function n(t, n) {
                if (!(t instanceof n)) throw new TypeError("Cannot call a class as a function")
            }

            function r(t, n) {
                for (var r = 0; r < n.length; r++) {
                    var e = n[r];
                    e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), Object.defineProperty(t, e.key, e)
                }
            }

            function e(t, n, e) {
                return n && r(t.prototype, n), e && r(t, e), t
            }

            var i = 1e-5, u = Math.abs;

            function o(t) {
                return t
            }

            function a(t, n, r) {
                var e = 1 - r;
                return 3 * r * e * (t * e + n * r) + r * r * r
            }

            function l() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                    e = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                return t < 0 || t > 1 || r < 0 || r > 1 ? null : u(t - n) <= i && u(r - e) <= i ? o : function (o) {
                    if (o <= 0) return t > 0 ? o * n / t : 0 === n && r > 0 ? o * e / r : 0;
                    if (o >= 1) return r < 1 ? 1 + (o - 1) * (e - 1) / (r - 1) : 1 === r && t < 1 ? 1 + (o - 1) * (n - 1) / (t - 1) : 1;
                    for (var l, f = 0, s = 1; f < s;) {
                        var c = a(t, r, l = (f + s) / 2);
                        if (u(o - c) < i) break;
                        c < o ? f = l : s = l
                    }
                    return a(n, e, l)
                }
            }

            function f() {
                return 1
            }

            function s(t) {
                return 1 === t ? 1 : 0
            }

            function c() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                if (1 === t) {
                    if (0 === n) return s;
                    if (1 === n) return f
                }
                var r = 1 / t;
                return function (t) {
                    return t >= 1 ? 1 : (t += n * r) - t % r
                }
            }

            function v(t) {
                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
                if (Number.isInteger(t)) return t;
                var r = Math.pow(10, n);
                return Math.round(t * r) / r
            }

            var h = Math.PI / 180;

            function y(t, n, r) {
                return t >= .5 ? r : n
            }

            function d(t, n, r) {
                return 0 === t || n === r ? n : t * (r - n) + n
            }

            function g(t, n, r) {
                var e = d(t, n, r);
                return e <= 0 ? 0 : e
            }

            function m(t, n, r) {
                return 0 === t ? n : 1 === t ? r : {x: d(t, n.x, r.x), y: d(t, n.y, r.y)}
            }

            function p(t, n, r) {
                return 0 === t ? n : 1 === t ? r : {x: g(t, n.x, r.x), y: g(t, n.y, r.y)}
            }

            function b(t, n, r) {
                var e = function (t, n, r) {
                    return Math.round(d(t, n, r))
                }(t, n, r);
                return e <= 0 ? 0 : e >= 255 ? 255 : e
            }

            function w(t, n, r) {
                return 0 === t ? n : 1 === t ? r : {
                    r: b(t, n.r, r.r),
                    g: b(t, n.g, r.g),
                    b: b(t, n.b, r.b),
                    a: d(t, null == n.a ? 1 : n.a, null == r.a ? 1 : r.a)
                }
            }

            function A(t, n, r) {
                if (0 === t) return n;
                if (1 === t) return r;
                var e = n.length;
                if (e !== r.length) return y(t, n, r);
                for (var i = [], u = 0; u < e; u++) i.push(w(t, n[u], r[u]));
                return i
            }

            function x(t, n, r) {
                var e = n.length;
                if (e !== r.length) return y(t, n, r);
                for (var i = new Array(e), u = 0; u < e; u++) i[u] = d(t, n[u], r[u]);
                return i
            }

            function k(t, n) {
                for (var r = [], e = 0; e < t; e++) r.push(n);
                return r
            }

            function S(t, n) {
                if (--n <= 0) return t;
                var r = (t = Object.assign([], t)).length;
                do {
                    for (var e = 0; e < r; e++) t.push(t[e])
                } while (--n > 0);
                return t
            }

            var _ = 6, M = /\\.0+$/g;

            function I(t) {
                return Number.isInteger(t) ? t + "" : t.toFixed(_).replace(M, "")
            }

            function E(t) {
                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : " ";
                return t && t.length ? t.map(I).join(n) : ""
            }

            function F(t) {
                return I(t.x) + "," + I(t.y)
            }

            function B(t) {
                return t ? null == t.a || t.a >= 1 ? "rgb(" + t.r + "," + t.g + "," + t.b + ")" : "rgba(" + t.r + "," + t.g + "," + t.b + "," + t.a + ")" : "transparent"
            }

            var j = {
                    f: null, i: p, u: function (t, n) {
                        return function (r) {
                            var e = n(r);
                            t.setAttribute("rx", I(e.x)), t.setAttribute("ry", I(e.y))
                        }
                    }
                }, q = {
                    f: null, i: function (t, n, r) {
                        return 0 === t ? n : 1 === t ? r : {
                            width: g(t, n.width, r.width),
                            height: g(t, n.height, r.height)
                        }
                    }, u: function (t, n) {
                        return function (r) {
                            var e = n(r);
                            t.setAttribute("width", I(e.width)), t.setAttribute("height", I(e.height))
                        }
                    }
                }, P = Math.sin, O = Math.cos, z = Math.acos, L = Math.asin, C = Math.tan, R = Math.atan2,
                T = Math.PI / 180, V = 180 / Math.PI, D = Math.sqrt, N = function () {
                    function t() {
                        var r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                            u = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1,
                            o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                            a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0;
                        n(this, t), this.m = [r, e, i, u, o, a], this.i = null, this.w = null, this.s = null
                    }

                    return e(t, [{
                        key: "point", value: function (t, n) {
                            var r = this.m;
                            return {x: r[0] * t + r[2] * n + r[4], y: r[1] * t + r[3] * n + r[5]}
                        }
                    }, {
                        key: "translateSelf", value: function () {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            if (!t && !n) return this;
                            var r = this.m;
                            return r[4] += r[0] * t + r[2] * n, r[5] += r[1] * t + r[3] * n, this.w = this.s = this.i = null, this
                        }
                    }, {
                        key: "rotateSelf", value: function () {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                            if (t %= 360) {
                                var n = P(t *= T), r = O(t), e = this.m, i = e[0], u = e[1];
                                e[0] = i * r + e[2] * n, e[1] = u * r + e[3] * n, e[2] = e[2] * r - i * n, e[3] = e[3] * r - u * n, this.w = this.s = this.i = null
                            }
                            return this
                        }
                    }, {
                        key: "scaleSelf", value: function () {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                            if (1 !== t || 1 !== n) {
                                var r = this.m;
                                r[0] *= t, r[1] *= t, r[2] *= n, r[3] *= n, this.w = this.s = this.i = null
                            }
                            return this
                        }
                    }, {
                        key: "skewSelf", value: function (t, n) {
                            if (n %= 360, (t %= 360) || n) {
                                var r = this.m, e = r[0], i = r[1], u = r[2], o = r[3];
                                t && (t = C(t * T), r[2] += e * t, r[3] += i * t), n && (n = C(n * T), r[0] += u * n, r[1] += o * n), this.w = this.s = this.i = null
                            }
                            return this
                        }
                    }, {
                        key: "resetSelf", value: function () {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                                e = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1,
                                i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                                u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0, o = this.m;
                            return o[0] = t, o[1] = n, o[2] = r, o[3] = e, o[4] = i, o[5] = u, this.w = this.s = this.i = null, this
                        }
                    }, {
                        key: "recomposeSelf", value: function () {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                                r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                                e = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                                i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null;
                            return this.isIdentity || this.resetSelf(), t && (t.x || t.y) && this.translateSelf(t.x, t.y), n && this.rotateSelf(n), r && (r.x && this.skewSelf(r.x, 0), r.y && this.skewSelf(0, r.y)), !e || 1 === e.x && 1 === e.y || this.scaleSelf(e.x, e.y), i && (i.x || i.y) && this.translateSelf(i.x, i.y), this
                        }
                    }, {
                        key: "decompose", value: function () {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r = this.m,
                                e = r[0] * r[0] + r[1] * r[1], i = [[r[0], r[1]], [r[2], r[3]]], u = D(e);
                            if (0 === u) return {
                                origin: {x: r[4], y: r[5]},
                                translate: {x: t, y: n},
                                scale: {x: 0, y: 0},
                                skew: {x: 0, y: 0},
                                rotate: 0
                            };
                            i[0][0] /= u, i[0][1] /= u;
                            var o = r[0] * r[3] - r[1] * r[2] < 0;
                            o && (u = -u);
                            var a = i[0][0] * i[1][0] + i[0][1] * i[1][1];
                            i[1][0] -= i[0][0] * a, i[1][1] -= i[0][1] * a;
                            var l = D(i[1][0] * i[1][0] + i[1][1] * i[1][1]);
                            if (0 === l) return {
                                origin: {x: r[4], y: r[5]},
                                translate: {x: t, y: n},
                                scale: {x: u, y: 0},
                                skew: {x: 0, y: 0},
                                rotate: 0
                            };
                            i[1][0] /= l, i[1][1] /= l, a /= l;
                            var f = 0;
                            return i[1][1] < 0 ? (f = z(i[1][1]) * V, i[0][1] < 0 && (f = 360 - f)) : f = L(i[0][1]) * V, o && (f = -f), a = R(a, D(i[0][0] * i[0][0] + i[0][1] * i[0][1])) * V, {
                                origin: {
                                    x: r[4],
                                    y: r[5]
                                }, translate: {x: t, y: n}, scale: {x: u, y: l}, skew: {x: a, y: 0}, rotate: f
                            }
                        }
                    }, {
                        key: "toString", value: function () {
                            return null === this.s && (this.s = "matrix(" + this.m.map($).join(" ") + ")"), this.s
                        }
                    }, {
                        key: "determinant", get: function () {
                            var t = this.m;
                            return t[0] * t[3] - t[1] * t[2]
                        }
                    }, {
                        key: "isIdentity", get: function () {
                            if (null === this.i) {
                                var t = this.m;
                                this.i = 1 === t[0] && 0 === t[1] && 0 === t[2] && 1 === t[3] && 0 === t[4] && 0 === t[5]
                            }
                            return this.i
                        }
                    }]), t
                }(), G = /\.0+$/;

            function $(t) {
                return Number.isInteger(t) ? t : t.toFixed(14).replace(G, "")
            }

            Object.freeze({M: 2, L: 2, Z: 0, H: 1, V: 1, C: 6, Q: 4, T: 2, S: 4, A: 7});

            function H(t, n, r) {
                return t + (n - t) * r
            }

            function Q(t, n, r) {
                var e = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                    i = {x: H(t.x, n.x, r), y: H(t.y, n.y, r)};
                return e && (i.a = function (t, n) {
                    return Math.atan2(n.y - t.y, n.x - t.x)
                }(t, n)), i
            }

            function U(t, n, r, e) {
                var i = 1 - e;
                return i * i * t + 2 * i * e * n + e * e * r
            }

            function Y(t, n, r, e) {
                return 2 * (1 - e) * (n - t) + 2 * e * (r - n)
            }

            function Z(t, n, r, e) {
                var i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
                    u = {x: U(t.x, n.x, r.x, e), y: U(t.y, n.y, r.y, e)};
                return i && (u.a = function (t, n, r, e) {
                    return Math.atan2(Y(t.y, n.y, r.y, e), Y(t.x, n.x, r.x, e))
                }(t, n, r, e)), u
            }

            function J(t, n, r, e, i) {
                var u = i * i;
                return i * u * (e - t + 3 * (n - r)) + 3 * u * (t + r - 2 * n) + 3 * i * (n - t) + t
            }

            function K(t, n, r, e, i) {
                var u = 1 - i;
                return 3 * (u * u * (n - t) + 2 * u * i * (r - n) + i * i * (e - r))
            }

            function W(t, n, r, e, i) {
                var u = arguments.length > 5 && void 0 !== arguments[5] && arguments[5],
                    o = {x: J(t.x, n.x, r.x, e.x, i), y: J(t.y, n.y, r.y, e.y, i)};
                return u && (o.a = function (t, n, r, e, i) {
                    return Math.atan2(K(t.y, n.y, r.y, e.y, i), K(t.x, n.x, r.x, e.x, i))
                }(t, n, r, e, i)), o
            }

            function X(t, n, r) {
                var e, i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                if (nt(n)) {
                    if (null != (e = r).start && !nt(e)) return Z(n, r.start, r, t, i)
                } else if (nt(r)) {
                    if (n.end) return Z(n, n.end, r, t, i)
                } else {
                    if (n.end) return r.start ? W(n, n.end, r.start, r, t, i) : Z(n, n.end, r, t, i);
                    if (r.start) return Z(n, r.start, r, t, i)
                }
                return Q(n, r, t, i)
            }

            function tt(t, n, r) {
                var e = X(t, n, r, !0);
                return e.a = function (t) {
                    return arguments.length > 1 && void 0 !== arguments[1] && arguments[1] ? t + Math.PI : t
                }(e.a) / h, e
            }

            function nt(t) {
                return !t.type || "corner" === t.type
            }

            var rt = new N;
            var et = {
                f: function (t) {
                    return t ? t.join(" ") : ""
                }, i: function (n, r, e) {
                    if (0 === n) return r;
                    if (1 === n) return e;
                    var i = r.length;
                    if (i !== e.length) return y(n, r, e);
                    for (var u, o = new Array(i), a = 0; a < i; a++) {
                        if ((u = t(r[a])) !== t(e[a])) return y(n, r, e);
                        if ("number" === u) o[a] = d(n, r[a], e[a]); else {
                            if (r[a] !== e[a]) return y(n, r, e);
                            o[a] = r[a]
                        }
                    }
                    return o
                }
            }, it = {
                f: null, i: x, u: function (t, n) {
                    return function (r) {
                        var e = n(r);
                        t.setAttribute("x1", I(e[0])), t.setAttribute("y1", I(e[1])), t.setAttribute("x2", I(e[2])), t.setAttribute("y2", I(e[3]))
                    }
                }
            }, ut = {f: I, i: d}, ot = {
                f: I, i: function (t, n, r) {
                    var e = d(t, n, r);
                    return e <= 0 ? 0 : e >= 1 ? 1 : e
                }
            }, at = {
                f: E, i: function (t, n, r) {
                    var e, i, u, o = n.length, a = r.length;
                    if (o !== a) if (0 === o) n = k(o = a, 0); else if (0 === a) a = o, r = k(o, 0); else {
                        var l = (u = (e = o) * (i = a) / function (t, n) {
                            for (var r; n;) r = n, n = t % n, t = r;
                            return t || 1
                        }(e, i)) < 0 ? -u : u;
                        n = S(n, Math.floor(l / o)), r = S(r, Math.floor(l / a)), o = a = l
                    }
                    for (var f = [], s = 0; s < o; s++) f.push(v(g(t, n[s], r[s]), 6));
                    return f
                }
            };

            function lt(t, n, r, e, i, u, o, a) {
                return n = function (t, n, r) {
                    for (var e, i, u, o = t.length - 1, a = {}, l = 0; l <= o; l++) (e = t[l]).e && (e.e = n(e.e)), e.v && "g" === (i = e.v).t && i.r && (u = r.getElementById(i.r)) && (a[i.r] = u.querySelectorAll("stop"));
                    return a
                }(t, e, a), function (e) {
                    var i, u = r(e, t, ft);
                    return u ? "c" === u.t ? B(u.v) : "g" === u.t ? (n[u.r] && function (t, n) {
                        for (var r = 0, e = t.length; r < e; r++) t[r].setAttribute("stop-color", B(n[r]))
                    }(n[u.r], u.v), (i = u.r) ? "url(#" + i + ")" : "none") : "none" : "none"
                }
            }

            function ft(t, n, r) {
                if (0 === t) return n;
                if (1 === t) return r;
                if (n && r) {
                    var e = n.t;
                    if (e === r.t) switch (n.t) {
                        case"c":
                            return {t: e, v: w(t, n.v, r.v)};
                        case"g":
                            if (n.r === r.r) return {t: e, v: A(t, n.v, r.v), r: n.r}
                    }
                }
                return y(t, n, r)
            }

            var st = {
                blur: p, brightness: g, contrast: g, "drop-shadow": function (t, n, r) {
                    return 0 === t ? n : 1 === t ? r : {
                        blur: p(t, n.blur, r.blur),
                        offset: m(t, n.offset, r.offset),
                        color: w(t, n.color, r.color)
                    }
                }, grayscale: g, "hue-rotate": d, invert: g, opacity: g, saturate: g, sepia: g
            };

            function ct(t, n, r) {
                if (0 === t) return n;
                if (1 === t) return r;
                var e = n.length;
                if (e !== r.length) return y(t, n, r);
                for (var i, u = [], o = 0; o < e; o++) {
                    if (n[o].type !== r[o].type) return n;
                    if (!(i = st[n[o].type])) return y(t, n, r);
                    u.push({type: n.type, value: i(t, n[o].value, r[o].value)})
                }
                return u
            }

            var vt = {
                blur: function (t) {
                    return t ? function (n) {
                        t.setAttribute("stdDeviation", F(n))
                    } : null
                }, brightness: function (t, n, r) {
                    return (t = yt(r, n)) ? function (n) {
                        n = I(n), t.map((function (t) {
                            return t.setAttribute("slope", n)
                        }))
                    } : null
                }, contrast: function (t, n, r) {
                    return (t = yt(r, n)) ? function (n) {
                        var r = I((1 - n) / 2);
                        n = I(n), t.map((function (t) {
                            t.setAttribute("slope", n), t.setAttribute("intercept", r)
                        }))
                    } : null
                }, "drop-shadow": function (t, n, r) {
                    var e = r.getElementById(n + "-blur");
                    if (!e) return null;
                    var i = r.getElementById(n + "-offset");
                    if (!i) return null;
                    var u = r.getElementById(n + "-flood");
                    return u ? function (t) {
                        e.setAttribute("stdDeviation", F(t.blur)), i.setAttribute("dx", I(t.offset.x)), i.setAttribute("dy", I(t.offset.y)), u.setAttribute("flood-color", B(t.color))
                    } : null
                }, grayscale: function (t) {
                    return t ? function (n) {
                        t.setAttribute("values", E(function (t) {
                            return [.2126 + .7874 * (t = 1 - t), .7152 - .7152 * t, .0722 - .0722 * t, 0, 0, .2126 - .2126 * t, .7152 + .2848 * t, .0722 - .0722 * t, 0, 0, .2126 - .2126 * t, .7152 - .7152 * t, .0722 + .9278 * t, 0, 0, 0, 0, 0, 1, 0]
                        }(n)))
                    } : null
                }, "hue-rotate": function (t) {
                    return t ? function (n) {
                        return t.setAttribute("values", I(n))
                    } : null
                }, invert: function (t, n, r) {
                    return (t = yt(r, n)) ? function (n) {
                        n = I(n) + " " + I(1 - n), t.map((function (t) {
                            return t.setAttribute("tableValues", n)
                        }))
                    } : null
                }, opacity: function (t, n, r) {
                    return (t = r.getElementById(n + "-A")) ? function (n) {
                        return t.setAttribute("tableValues", "0 " + I(n))
                    } : null
                }, saturate: function (t) {
                    return t ? function (n) {
                        return t.setAttribute("values", I(n))
                    } : null
                }, sepia: function (t) {
                    return t ? function (n) {
                        return t.setAttribute("values", E(function (t) {
                            return [.393 + .607 * (t = 1 - t), .769 - .769 * t, .189 - .189 * t, 0, 0, .349 - .349 * t, .686 + .314 * t, .168 - .168 * t, 0, 0, .272 - .272 * t, .534 - .534 * t, .131 + .869 * t, 0, 0, 0, 0, 0, 1, 0]
                        }(n)))
                    } : null
                }
            };
            var ht = ["R", "G", "B"];

            function yt(t, n) {
                var r = ht.map((function (r) {
                    return t.getElementById(n + "-" + r) || null
                }));
                return -1 !== r.indexOf(null) ? null : r
            }

            var dt = {
                fill: lt,
                "fill-opacity": ot,
                stroke: lt,
                "stroke-opacity": ot,
                "stroke-width": ut,
                "stroke-dashoffset": {f: I, i: d},
                "stroke-dasharray": at,
                opacity: ot,
                transform: function (n, r, e, i) {
                    if (!(n = function (n, r) {
                        if (!n || "object" !== t(n)) return null;
                        var e = !1;
                        for (var i in n) n.hasOwnProperty(i) && (n[i] && n[i].length ? (n[i].forEach((function (t) {
                            t.e && (t.e = r(t.e))
                        })), e = !0) : delete n[i]);
                        return e ? n : null
                    }(n, i))) return null;
                    var u = function (t, i, u) {
                        var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                        return n[t] ? e(i, n[t], u) : r && r[t] ? r[t] : o
                    };
                    return r && r.a && n.o ? function (t) {
                        var r = e(t, n.o, tt);
                        return rt.recomposeSelf(r, u("r", t, d, 0) + r.a, u("k", t, m), u("s", t, m), u("t", t, m)).toString()
                    } : function (t) {
                        return rt.recomposeSelf(u("o", t, X, null), u("r", t, d, 0), u("k", t, m), u("s", t, m), u("t", t, m)).toString()
                    }
                },
                "#filter": function (t, n, r, e, i, u, o, a) {
                    if (!n.items || !t || !t.length) return null;
                    var l = function (t, n) {
                        var r = (t = t.map((function (t) {
                            return t && vt[t[0]] ? (n.getElementById(t[1]), vt[t[0]](n.getElementById(t[1]), t[1], n)) : null
                        }))).length;
                        return function (n) {
                            for (var e = 0; e < r; e++) t[e] && t[e](n[e].value)
                        }
                    }(n.items, a);
                    return l ? (t = function (t, n) {
                        return t.map((function (t) {
                            return t.e = n(t.e), t
                        }))
                    }(t, e), function (n) {
                        l(r(n, t, ct))
                    }) : null
                },
                "#line": it,
                points: {f: E, i: x},
                d: et,
                r: ut,
                "#size": q,
                "#radius": j,
                _: function (t, n) {
                    if (Array.isArray(t)) for (var r = 0; r < t.length; r++) this[t[r]] = n;else this[t] = n
                }
            }, gt = function () {
                function t(r) {
                    n(this, t), this.list = r, this.length = r.length
                }

                return e(t, [{
                    key: "setAttribute", value: function (t, n) {
                        for (var r = this.list, e = 0; e < this.length; e++) r[e].setAttribute(t, n)
                    }
                }, {
                    key: "removeAttribute", value: function (t) {
                        for (var n = this.list, r = 0; r < this.length; r++) n[r].removeAttribute(t)
                    }
                }, {
                    key: "style", value: function (t, n) {
                        for (var r = this.list, e = 0; e < this.length; e++) r[e].style[t] = n
                    }
                }]), t
            }(), mt = /-./g, pt = function (t, n) {
                return n.toUpperCase()
            };

            function bt(t) {
                return "function" == typeof t ? t : y
            }

            function wt(t) {
                return t ? "function" == typeof t ? t : Array.isArray(t) ? function (t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : o;
                    if (!Array.isArray(t)) return n;
                    switch (t.length) {
                        case 1:
                            return c(t[0]) || n;
                        case 2:
                            return c(t[0], t[1]) || n;
                        case 4:
                            return l(t[0], t[1], t[2], t[3]) || n
                    }
                    return n
                }(t, null) : function (t, n) {
                    var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : o;
                    switch (t) {
                        case"linear":
                            return o;
                        case"steps":
                            return c(n.steps || 1, n.jump || 0) || r;
                        case"bezier":
                        case"cubic-bezier":
                            return l(n.x1 || 0, n.y1 || 0, n.x2 || 0, n.y2 || 0) || r
                    }
                    return r
                }(t.type, t.value, null) : null
            }

            function At(t, n, r) {
                var e = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], i = n.length - 1;
                if (t <= n[0].t) return e ? [0, 0, n[0].v] : n[0].v;
                if (t >= n[i].t) return e ? [i, 1, n[i].v] : n[i].v;
                var u, o = n[0], a = null;
                for (u = 1; u <= i; u++) {
                    if (!(t > n[u].t)) {
                        a = n[u];
                        break
                    }
                    o = n[u]
                }
                return null == a ? e ? [i, 1, n[i].v] : n[i].v : o.t === a.t ? e ? [u, 1, a.v] : a.v : (t = (t - o.t) / (a.t - o.t), o.e && (t = o.e(t)), e ? [u, t, r(t, o.v, a.v)] : r(t, o.v, a.v))
            }

            function xt(t, n) {
                var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                return t && t.length ? "function" != typeof n ? null : ("function" != typeof r && (r = null), function (e) {
                    var i = At(e, t, n);
                    return null != i && r && (i = r(i)), i
                }) : null
            }

            function kt(t, n) {
                return t.t - n.t
            }

            function St(n, r, e, i, u) {
                var o, a = "@" === e[0], l = "#" === e[0], f = dt[e], s = y;
                switch (a ? (o = e.substr(1), e = o.replace(mt, pt)) : l && (e = e.substr(1)), t(f)) {
                    case"function":
                        if (s = f(i, u, At, wt, e, a, r, n), l) return s;
                        break;
                    case"string":
                        s = xt(i, bt(f));
                        break;
                    case"object":
                        if ((s = xt(i, bt(f.i), f.f)) && "function" == typeof f.u) return f.u(r, s, e, a, n)
                }
                return s ? function (t, n, r) {
                    if (arguments.length > 3 && void 0 !== arguments[3] && arguments[3]) return t instanceof gt ? function (e) {
                        return t.style(n, r(e))
                    } : function (e) {
                        return t.style[n] = r(e)
                    };
                    if (Array.isArray(n)) {
                        var e = n.length;
                        return function (i) {
                            var u = r(i);
                            if (null == u) for (var o = 0; o < e; o++) t[o].removeAttribute(n);else for (var a = 0; a < e; a++) t[a].setAttribute(n, u)
                        }
                    }
                    return function (e) {
                        var i = r(e);
                        null == i ? t.removeAttribute(n) : t.setAttribute(n, i)
                    }
                }(r, e, s, a) : null
            }

            function _t(n, r, e, i) {
                if (!i || "object" !== t(i)) return null;
                var u = null, o = null;
                return Array.isArray(i) ? o = function (t) {
                    if (!t || !t.length) return null;
                    for (var n = 0; n < t.length; n++) t[n].e && (t[n].e = wt(t[n].e));
                    return t.sort(kt)
                }(i) : (o = i.keys, u = i.data || null), o ? St(n, r, e, o, u) : null
            }

            function Mt(t, n, r) {
                if (!r) return null;
                var e = [];
                for (var i in r) if (r.hasOwnProperty(i)) {
                    var u = _t(t, n, i, r[i]);
                    u && e.push(u)
                }
                return e.length ? e : null
            }

            function It(t, n) {
                if (!n.duration || n.duration < 0) return null;
                var r = function (t, n) {
                    if (!n) return null;
                    var r = [];
                    if (Array.isArray(n)) for (var e = n.length, i = 0; i < e; i++) {
                        var u = n[i];
                        if (2 === u.length) {
                            var o = null;
                            if ("string" == typeof u[0]) o = t.getElementById(u[0]); else if (Array.isArray(u[0])) {
                                o = [];
                                for (var a = 0; a < u[0].length; a++) if ("string" == typeof u[0][a]) {
                                    var l = t.getElementById(u[0][a]);
                                    l && o.push(l)
                                }
                                o = o.length ? 1 === o.length ? o[0] : new gt(o) : null
                            }
                            if (o) {
                                var f = Mt(t, o, u[1]);
                                f && (r = r.concat(f))
                            }
                        }
                    }else for (var s in n) if (n.hasOwnProperty(s)) {
                        var c = t.getElementById(s);
                        if (c) {
                            var v = Mt(t, c, n[s]);
                            v && (r = r.concat(v))
                        }
                    }
                    return r.length ? r : null
                }(t, n.elements);
                return r ? function (t, n) {
                    var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1 / 0,
                        e = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1,
                        i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
                        u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1, o = t.length,
                        a = e > 0 ? n : 0;
                    i && r % 2 == 0 && (a = n - a);
                    var l = null;
                    return function (f, s) {
                        var c = f % n, v = 1 + (f - c) / n;
                        s *= e, i && v % 2 == 0 && (s = -s);
                        var h = !1;
                        if (v > r) c = a, h = !0, -1 === u && (c = e > 0 ? 0 : n); else if (s < 0 && (c = n - c), c === l) return !1;
                        l = c;
                        for (var y = 0; y < o; y++) t[y](c);
                        return h
                    }
                }(r, n.duration, n.iterations || 1 / 0, n.direction || 1, !!n.alternate, n.fill || 1) : null
            }

            var Et = function () {
                function t(r) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    n(this, t), this._id = 0, this._running = !1, this._animations = r, this.direction = e.direction || 1, this.speed = e.speed || 1, this.fps = e.fps || 100, this.offset = e.offset || 0
                }

                return e(t, [{
                    key: "_start", value: function () {
                        var t = this, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                            r = -1 / 0, e = null, i = {}, u = function u(o) {
                                t._running = !0, null == e && (e = o);
                                var a = Math.round((o - e + n) * t.speed), l = t.fps ? 1e3 / t.fps : 0;
                                if (a > r + l) {
                                    t.offset = a, r = a;
                                    for (var f = t._animations, s = f.length, c = 0, v = 0; v < s; v++) i[v] ? c++ : (i[v] = f[v](a, t.direction), i[v] && c++);
                                    if (c === s) return void t._stop()
                                }
                                t._id = window.requestAnimationFrame(u)
                            };
                        this._id = window.requestAnimationFrame(u)
                    }
                }, {
                    key: "_stop", value: function () {
                        this._id && window.cancelAnimationFrame(this._id), this._running = !1
                    }
                }, {
                    key: "play", value: function () {
                        this._running || this._start(this.offset)
                    }
                }, {
                    key: "stop", value: function () {
                        this._stop(), this.offset = 0;
                        var t = this.direction, n = this._animations;
                        requestAnimationFrame((function () {
                            for (var r = 0; r < n.length; r++) n[r](0, t)
                        }))
                    }
                }, {
                    key: "restart", value: function () {
                        this._stop(), this.offset = 0, this._start()
                    }
                }, {
                    key: "pause", value: function () {
                        this._stop()
                    }
                }, {
                    key: "reverse", value: function () {
                        this.direction = -this.direction
                    }
                }], [{
                    key: "build", value: function (n) {
                        if (!(n = function (t) {
                            if (!t || !t.root || !Array.isArray(t.animations)) return null;
                            var n = window.document.getElementById(t.root);
                            if (!n) return null;
                            var r = t.animations.map((function (t) {
                                return It(n, t)
                            })).filter((function (t) {
                                return !!t
                            }));
                            return r.length ? {element: n, animations: r, options: t.options || void 0} : null
                        }(n))) return null;
                        var r = n.element, e = n.options || {}, i = new t(n.animations, n.options);
                        return function (t, n, r) {
                            var e = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                            if ("click" === r) {
                                return void n.addEventListener("click", (function r() {
                                    n.removeEventListener("click", r), t.play()
                                }))
                            }
                            if ("hover" === r) return n.addEventListener("mouseenter", (function () {
                                return t.play()
                            })), void n.addEventListener("mouseleave", "freeze" === e ? function () {
                                return t.pause()
                            } : function () {
                                return t.stop()
                            });
                            t.play()
                        }(i, r, e.start, e.hover), i
                    }
                }]), t
            }();
            return function () {
                for (var t = 0, n = ["ms", "moz", "webkit", "o"], r = 0; r < n.length && !window.requestAnimationFrame; ++r) window.requestAnimationFrame = window[n[r] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[n[r] + "CancelAnimationFrame"] || window[n[r] + "CancelRequestAnimationFrame"];
                window.requestAnimationFrame || (window.requestAnimationFrame = function (n) {
                    var r = Date.now(), e = Math.max(0, 16 - (r - t)), i = window.setTimeout((function () {
                        n(r + e)
                    }), e);
                    return t = r + e, i
                }, window.cancelAnimationFrame = window.clearTimeout)
            }(), Et
        }));
        __SVGATOR_PLAYER__.build({
            "root": "ejgh9d02f4xc1", "animations": [{
                "duration": 2500, "direction": 1, "iterations": 1, "fill": 1, "alternate": false, "elements": {
                    "ejgh9d02f4xc3": {
                        "d": [{
                            "t": 0,
                            "v": ["M", 14.667639602029906, 67.4337050560606, "L", 14.667639602029906, 67.4337050560606, "C", 14.6883562954585, 67.31824949807904, 14.688443433046034, 67.39266195971518, 14.667639602029906, 67.4337050560606, "C", 14.62784834727738, 67.40450979234575, 14.567647487692374, 67.40535728002651, 14.667639602029906, 67.4337050560606, "C", 14.726873882514248, 67.45311518380542, 14.655338988642049, 67.44162753831188, 14.667639602029906, 67.4337050560606, "C", 14.620213692773058, 67.473817995514, 14.735941250976968, 67.47175601546006, 14.667639602029906, 67.4337050560606, "L", 14.667639602029906, 67.4337050560606, "L", 14.667639602029906, 67.4337050560606, "L", 14.667639602029906, 67.4337050560606, "L", 14.667639602029906, 72.65186505606059, "L", 14.667639602029906, 72.65186505606059, "L", 14.667639602029906, 67.43370505606059, "L", 14.667639602029906, 67.4337050560606, "C", 14.726902283742398, 67.44407982724357, 14.72616016713671, 67.3539292029244, 14.667639602029906, 67.4337050560606, "C", 14.66474295748214, 67.45305488237688, 14.674664056306655, 67.44721968485959, 14.667639602029906, 67.4337050560606, "Z", "M", 25.103959602029907, 36.12474505606062, "C", 25.139419472843304, 36.12830561161618, 25.108357137117615, 36.16516374027114, 25.1039596020299, 36.12474505606062, "C", 25.12519694623026, 36.222029056255266, 25.15176287413834, 36.2357942548607, 25.1039596020299, 36.12474505606062, "C", 25.09044094534266, 36.151189132184776, 25.121319100271883, 36.21089028517954, 25.103959602029907, 36.12474505606062, "L", 25.103959602029907, 36.12474505606062, "C", 25.103959602029907, 36.12474505606062, 25.103959602029914, 41.342905056060616, 25.103959602029914, 41.342905056060616, "L", 25.103959602029907, 41.342905056060616, "C", 25.08375399215227, 41.37987011503497, 25.194165738300978, 41.34061761988894, 25.1039596020299, 41.342905056060616, "C", 25.195962773953067, 41.43192751623524, 25.18370652799822, 41.38566270154401, 25.103959602029907, 41.40010999999998, "C", 25.140542563758306, 41.504568521109455, 25.122241365482257, 41.34924054817961, 25.103959602029914, 41.40010999999998, "L", 25.103959602029907, 41.342905056060616, "C", 25.061161579463686, 41.37876580294742, 25.091487081696542, 41.41184539534663, 25.103959602029914, 41.40010999999998, "Z"]
                        }, {
                            "t": 100,
                            "v": ["M", 19.301647000000024, 67.42553292121211, "L", 19.301647000000024, 67.42553292121211, "C", 19.32532322106127, 67.29358371209032, 19.26060223544702, 67.44344595396021, 19.301647000000024, 67.42553292121212, "C", 19.256171280282853, 67.392166905538, 19.18737029789999, 67.39313546288746, 19.301647000000024, 67.42553292121212, "C", 19.30360960626784, 67.44771592434907, 19.352408584699617, 67.56514032949929, 19.301647000000024, 67.42553292121212, "C", 19.377084817992202, 67.470460852016, 19.24915174165381, 67.53383916052579, 19.301647000000024, 67.42553292121212, "L", 19.301647000000024, 67.42553292121212, "L", 19.301647000000024, 67.42553292121211, "L", 14.68897668803418, 67.42553292121211, "L", 14.68897668803418, 72.64369292121211, "L", 14.68897668803418, 72.64369292121211, "L", 14.68897668803418, 72.64369292121211, "L", 19.301647000000024, 67.42553292121212, "C", 19.151678636242867, 67.4373898025641, 19.174070502979237, 67.44075937477076, 19.301647000000024, 67.42553292121212, "C", 19.168697691945443, 67.4060675798593, 19.416073804887738, 67.44097821126812, 19.301647000000024, 67.42553292121212, "Z", "M", 25.125296688034187, 36.11657292121213, "C", 25.165822254678066, 36.12064212756134, 25.130322442420148, 36.16276570316701, 25.125296688034187, 36.11657292121213, "C", 25.131852081406027, 36.136502064291726, 25.122896141872403, 36.07299486269794, 25.125296688034187, 36.11657292121213, "C", 25.109846794677342, 36.08915586535404, 25.087498257453586, 36.24354118306233, 25.12529668803418, 36.11657292121213, "L", 25.12529668803418, 36.11657292121213, "C", 25.12529668803418, 36.11657292121213, 25.125296688034187, 41.33473292121213, 25.125296688034187, 41.33473292121213, "L", 25.12529668803418, 41.33473292121213, "C", 25.129511276745454, 41.41690170289711, 25.171356558058275, 41.26817299415879, 25.12529668803418, 41.33473292121213, "C", 25.133487313089233, 41.36353973284027, 25.06694203199797, 41.30375280176458, 25.125296688034187, 41.40010999999998, "C", 25.167105787152366, 41.302767452696514, 25.146190131979715, 41.27659640484599, 25.12529668803418, 41.33473292121213, "L", 25.12529668803418, 41.33473292121213, "C", 25.076384662244212, 41.37571663193991, 25.11104237908176, 41.3481448016083, 25.125296688034187, 41.33473292121213, "Z"]
                        }, {
                            "t": 200,
                            "v": ["M", 20.929641000000025, 72.63552078636363, "L", 20.929641000000025, 72.63552078636363, "C", 20.956276748693927, 72.48707792610162, 20.883465639877894, 72.65567294820522, 20.929641000000025, 72.63552078636363, "C", 20.878480815318206, 72.59798401873024, 20.864886335137484, 72.6628802707484, 20.929641000000025, 72.63552078636363, "C", 20.938137057051318, 72.59667003989266, 25.179858056825502, 67.31290449568665, 25.186556774038454, 67.41736078636362, "C", 25.207617694279655, 67.410387333518, 25.32520760839897, 67.41159205559146, 25.18655677403846, 67.41736078636362, "L", 25.18655677403846, 67.41736078636362, "L", 25.186556774038454, 67.41736078636362, "L", 14.750236774038454, 67.41736078636362, "L", 14.750236774038454, 72.63552078636363, "L", 20.929641000000025, 72.63552078636363, "L", 20.929641000000025, 72.63552078636363, "L", 20.929641000000025, 72.63552078636363, "C", 20.854024965773224, 72.6488597778846, 20.97753731585164, 72.6181367966171, 20.929641000000025, 72.63552078636361, "C", 21.035298403438624, 72.7757492773417, 20.960050780498698, 72.58909011267659, 20.929641000000025, 72.63552078636363, "Z", "M", 25.186556774038454, 36.108400786363646, "C", 25.192225036512813, 36.2327466435065, 25.272055747722668, 36.160367666062896, 25.186556774038454, 36.108400786363646, "C", 25.258278216581775, 36.090899072328185, 25.173875409606445, 36.18965447053518, 25.186556774038454, 36.108400786363646, "C", 25.129252644012002, 36.146892598523294, 25.213369414635288, 36.23626908094512, 25.186556774038454, 36.108400786363646, "L", 25.186556774038454, 36.108400786363646, "C", 25.18655777403845, 36.108400786363646, 25.18655677403846, 41.32656078636364, 25.18655677403846, 41.32656078636364, "L", 25.186556774038454, 41.32656078636364, "C", 25.255114561338637, 41.33416429075924, 25.26831537781557, 41.19572936842864, 25.18655677403846, 41.32656078636364, "C", 25.1508578522254, 41.215304949445304, 25.26955953599771, 41.42775468834882, 25.186556774038454, 41.32656078636364, "C", 25.233592010546406, 41.306877170647255, 25.210061898477182, 41.26115720545174, 25.186556774038454, 41.32656078636364, "L", 25.18655677403846, 41.32656078636364, "C", 25.291222745024744, 41.292820460932404, 25.130597676466977, 41.301727151809324, 25.18655677403846, 41.32656078636364, "Z"]
                        }, {
                            "t": 300,
                            "v": ["M", 25.60641498557693, 72.63143471893939, "L", 25.60641498557693, 72.63143471893939, "C", 25.60302160919827, 72.56927281088504, 25.557674327670235, 72.65270644532774, 25.60641498557693, 72.63143471893939, "C", 25.615430901746123, 72.62332146421528, 25.057440726352358, 72.66031417467885, 25.12579287259615, 72.63143471893936, "C", 25.096593710594735, 72.65344448655333, 25.11872200442692, 67.40420085655813, 25.12579287259615, 67.41327471893938, "C", 25.116514399517417, 67.46227496315791, 25.202469864421126, 67.40718550312431, 25.12579287259615, 67.41327471893938, "L", 25.12579287259615, 67.41327471893938, "L", 25.125792872596143, 67.41327471893938, "L", 14.689472872596145, 67.41327471893938, "L", 14.689472872596145, 72.63143471893939, "L", 25.60641498557693, 72.63143471893939, "L", 25.60641498557693, 72.63143471893937, "L", 25.60641498557693, 72.63143471893937, "C", 25.51756028278197, 72.58249587665595, 25.625462763420302, 72.57253828531805, 25.60641498557693, 72.63143471893937, "C", 25.623414466984336, 72.69396312608292, 25.66098530943664, 72.61393345226973, 25.60641498557693, 72.63143471893939, "Z", "M", 25.125792872596136, 36.104314718939406, "C", 25.17391698298574, 36.10914690147909, 25.13176095592947, 36.159168647510825, 25.125792872596136, 36.104314718939406, "C", 25.2101343397252, 36.12798057634642, 25.187816099029035, 36.168137274453805, 25.12579287259615, 36.104314718939406, "C", 25.107446124234897, 36.19572246510792, 25.00525654878168, 36.11286502988652, 25.125792872596136, 36.104314718939406, "L", 25.125792872596143, 36.104314718939406, "C", 25.125792872596143, 36.104314718939406, 25.125792872596143, 41.322474718939404, 25.125792872596143, 41.322474718939404, "L", 25.125792872596136, 41.40010999999998, "C", 25.066830759190776, 41.45027686575089, 25.085671843249756, 41.33694933662414, 25.125792872596143, 41.40010999999998, "C", 25.08811067734902, 41.45836183880839, 25.000015343553134, 41.34279067103486, 25.125792872596136, 41.322474718939404, "C", 25.135518177798975, 41.30169756901654, 25.150603837281466, 41.331072886815186, 25.125792872596143, 41.40010999999998, "L", 25.125792872596143, 41.40010999999998, "C", 25.237211841970552, 41.48112315648922, 25.108865880715133, 41.41603660797042, 25.125792872596143, 41.40010999999998, "Z"]
                        }, {
                            "t": 400,
                            "v": ["M", 30.323111971153835, 72.62734865151515, "L", 30.323111971153835, 72.62734865151515, "C", 30.289689469702612, 72.65146769566846, 30.271806015462577, 72.64973994245025, 30.323111971153835, 72.62734865151515, "C", 30.39230398817404, 72.64865890970032, 25.033002343528793, 67.43958807860933, 25.104951971153838, 67.40918865151514, "C", 25.03805759009972, 67.49205893321404, 25.097508952028342, 67.4954972174296, 25.104951971153845, 67.40918865151514, "C", 25.06533410475518, 67.5141625927978, 25.119655120443287, 67.40277895065718, 25.104951971153838, 67.40918865151514, "L", 25.104951971153838, 67.40918865151514, "L", 25.104951971153838, 67.40918865151514, "L", 14.668631971153838, 67.40918865151514, "L", 14.668631971153838, 72.62734865151515, "L", 30.323111971153835, 72.62734865151515, "L", 30.323111971153835, 72.62734865151513, "L", 30.323111971153835, 72.62734865151513, "C", 30.221018599790717, 72.51613197542731, 30.313311210988964, 72.52693977401901, 30.323111971153835, 72.62734865151515, "C", 30.251453530530053, 72.61217697482414, 30.40184283837458, 72.63877679186288, 30.323111971153835, 72.62734865151515, "Z", "M", 25.104951971153838, 36.10022865151516, "C", 25.155608929458683, 36.10531515945167, 25.1112341641363, 36.15796962895876, 25.104951971153845, 36.10022865151516, "C", 25.04222246286865, 36.12514008036465, 25.16214378845161, 36.086776078372424, 25.104951971153838, 36.10022865151516, "C", 25.085639604457782, 36.044937331692545, 25.136682682928097, 36.109228978827915, 25.104951971153838, 36.10022865151516, "L", 25.104951971153838, 36.10022865151516, "C", 25.081558133039422, 36.08562821624148, 25.122475808360182, 41.25886913946493, 25.104951971153845, 41.31838865151516, "L", 25.104951971153838, 41.31838865151516, "C", 25.118083957042934, 41.37119587862138, 25.06271930868396, 41.243053742698486, 25.104951971153838, 41.31838865151516, "C", 25.06528650247266, 41.34653216605034, 25.08977615110857, 41.2977496537209, 25.104951971153838, 41.31838865151516, "C", 25.15721334505156, 41.29651796738583, 25.131068776085755, 41.24571800605748, 25.104951971153838, 41.31838865151516, "L", 25.104951971153845, 41.31838865151516, "C", 25.04381193891638, 41.36961828992489, 25.0271340849633, 41.39515350201036, 25.104951971153838, 41.31838865151516, "Z"]
                        }, {
                            "t": 500,
                            "v": ["M", 25.119987168269223, 64.10701299999997, "L", 25.11998716826923, 64.10701299999997, "C", 25.083222416672886, 64.1335439485686, 25.063550617008847, 64.13164342002857, 25.11998716826923, 64.10701299999997, "C", 25.196098386991455, 64.13045428400365, 25.113894677881664, 64.14045236980355, 25.119987168269223, 64.10701299999997, "C", 25.06028044910969, 64.19817030986876, 25.18485084723117, 64.11502432250589, 25.119987168269223, 64.10701299999997, "C", 25.16952031523069, 64.12318683541089, 25.031193732487612, 64.1529526290562, 25.119987168269223, 64.10701299999997, "L", 25.119987168269223, 64.10701299999997, "L", 25.119987168269223, 67.40101651666666, "L", 14.683667168269222, 67.40101651666666, "L", 14.683667168269222, 72.61917651666667, "L", 30.33814716826922, 72.61917651666667, "L", 30.33814716826922, 67.40101651666666, "L", 30.33814716826922, 67.40101651666666, "C", 30.31710855976979, 67.42478017297006, 30.32736633208786, 67.38183085142091, 30.33814716826922, 67.40101651666666, "C", 30.33237388358306, 67.36611347230655, 25.15175322221204, 64.11958395438248, 25.119987168269223, 64.10701299999997, "Z", "M", 29.03360716826922, 36.09205651666667, "C", 29.08932982240455, 36.09765167539683, 29.040517580549917, 36.15557159185463, 29.03360716826922, 36.09205651666667, "C", 28.996950109155506, 36.02796878840111, 29.057753067296765, 36.11440248620967, 29.03360716826922, 36.09205651666667, "C", 29.10385386490356, 36.0178368648618, 29.036602051220903, 36.14770257671071, 29.03360716826922, 36.09205651666667, "L", 25.11998716826923, 36.09205651666667, "C", 25.11998716826923, 36.09205651666667, 25.11998716826923, 41.31021651666667, 25.11998716826923, 41.31021651666667, "L", 25.119987168269223, 41.31021651666667, "C", 25.19912525274723, 41.32255876648352, 25.165021539552356, 41.29204211696833, 25.119987168269223, 41.31021651666667, "C", 25.122099752719926, 41.36797068265536, 25.167987766219433, 41.3473241024263, 25.11998716826923, 41.37002699999998, "C", 25.17747467955672, 41.345969247457724, 29.062335653694326, 36.05786450666322, 29.03360716826922, 36.09205651666667, "L", 29.03360716826922, 36.09205651666667, "C", 28.96635313280801, 36.14840911891737, 29.01400749345963, 36.1104978522114, 29.03360716826922, 36.09205651666667, "Z"]
                        }, {
                            "t": 600,
                            "v": ["M", 30.353182365384605, 61.501852999999976, "L", 30.353182365384605, 61.501852999999976, "C", 30.313075363643136, 61.53079585298394, 25.073455218555107, 58.364660549122085, 25.135022365384614, 58.337790999999974, "C", 25.218052785808858, 58.36336330982217, 25.12837601223454, 58.37427031251297, 25.135022365384607, 58.337790999999974, "C", 25.20447358084693, 58.371599701675, 25.107330378797645, 58.31039717000644, 25.135022365384607, 58.337790999999974, "C", 25.189058525706212, 58.45720318408463, 25.17274261725922, 58.35508914078859, 25.135022365384614, 58.337790999999974, "L", 25.135022365384607, 58.337790999999974, "L", 25.135022365384607, 67.42566219999999, "L", 14.698702365384607, 67.42566219999999, "L", 14.698702365384607, 72.64382219999999, "L", 30.353182365384605, 72.64382219999999, "L", 30.353182365384605, 61.501852999999976, "L", 30.353182365384605, 61.501852999999976, "C", 30.33438897429432, 61.49495917051279, 30.308603635004943, 61.55071663791374, 30.353182365384605, 61.501852999999976, "C", 30.314066418454246, 61.492435860698066, 30.39199406059494, 61.54838349568998, 30.353182365384605, 61.501852999999976, "Z", "M", 31.64746400000001, 36.116702200000006, "C", 31.64261780451128, 36.12280600952382, 31.655002631578956, 36.18599137293233, 31.64746400000001, 36.116702200000006, "C", 31.60831575369414, 36.112423950983036, 31.67380498075733, 36.10742053041055, 31.64746400000001, 36.116702200000006, "C", 31.658462214510198, 36.10221221621288, 31.61875569049276, 36.1445891745935, 31.64746400000001, 36.116702200000006, "L", 25.135022365384614, 36.116702200000006, "C", 25.135022365384614, 36.116702200000006, 25.135022365384614, 41.3348622, 25.135022365384614, 41.3348622, "L", 29.148991596153834, 41.3348622, "C", 29.13855514285712, 41.348326472527475, 29.165303273917246, 41.31672012760182, 29.148991596153827, 41.3348622, "C", 29.184114051918232, 41.36336547198766, 29.17022152119042, 41.310095402646894, 29.148991596153834, 41.3348622, "C", 29.17888851755837, 41.34143519722663, 31.67880416591832, 36.07940182545079, 31.647464000000017, 36.116702200000006, "L", 31.64746400000001, 36.116702200000006, "C", 31.574095961315056, 36.17817776609168, 31.62608362748045, 36.10400329332153, 31.64746400000001, 36.116702200000006, "Z"]
                        }, {
                            "t": 700,
                            "v": ["M", 30.36821756249999, 57.83314599999998, "L", 30.36821756249999, 57.83314599999998, "C", 30.324768310613397, 57.86450075739927, 25.083359820101364, 53.7885476782156, 25.1500575625, 53.75943899999998, "C", 25.24000718462626, 53.78714233564068, 25.14285734658743, 53.79895825522238, 25.1500575625, 53.75943899999998, "C", 25.09879762925085, 53.83838226014791, 25.162376160364122, 53.77162568417365, 25.1500575625, 53.75943899999998, "C", 25.250914986181737, 53.84693886609168, 25.19137500203082, 53.778178652520985, 25.150057562499992, 53.75943899999998, "L", 25.150057562499992, 53.75943899999998, "L", 25.150057562499992, 67.46254313333333, "L", 14.713737562499992, 67.46254313333333, "L", 14.713737562499992, 72.68070313333332, "L", 30.36821756249999, 72.68070313333332, "L", 30.36821756249999, 57.83314599999998, "L", 30.36821756249999, 57.83314599999998, "C", 30.36232922215218, 57.867995934722195, 30.404559354588685, 57.900551691073225, 30.36821756249999, 57.83314599999998, "C", 30.32584195332543, 57.85079118242291, 30.340099315644515, 57.84123578699749, 30.36821756249999, 57.83314599999998, "Z", "M", 34.17030500000002, 36.15358313333334, "C", 34.16505495488723, 36.160195593650805, 34.17847185087721, 36.22864640401002, 34.17030500000002, 36.15358313333334, "C", 34.16967023316865, 36.10561503023162, 34.155507729153776, 36.16675215794477, 34.17030500000001, 36.15358313333334, "C", 34.182219732386045, 36.11466148423062, 34.15931349803383, 36.18379402247629, 34.17030500000002, 36.15358313333334, "L", 25.1500575625, 36.15358313333334, "C", 25.1500575625, 36.15358313333334, 25.1500575625, 41.37174313333334, 25.1500575625, 41.37174313333334, "L", 31.113668991071403, 41.37174313333334, "C", 31.09924866666663, 41.4079960952381, 31.131339975315118, 41.37064172156864, 31.113668991071417, 41.37174313333334, "C", 31.130051651482855, 41.38406917798663, 34.16852325212298, 36.191752436200815, 34.17030500000002, 36.15358313333334, "C", 34.202693331521594, 36.16070388032885, 34.2042568464115, 36.11317439423836, 34.17030500000001, 36.15358313333334, "L", 34.17030500000001, 36.15358313333334, "C", 34.090822958091316, 36.22018166326599, 34.1471429297705, 36.13982598443166, 34.17030500000002, 36.15358313333334, "Z"]
                        }, {
                            "t": 800,
                            "v": ["M", 30.23893537499999, 51.805881066666664, "L", 30.238935374999976, 51.805881066666664, "C", 30.192143872968266, 51.83964772848129, 30.167107037032224, 51.837228873975796, 30.238935374999983, 51.805881066666664, "C", 30.209254968059035, 51.709165120433575, 30.27336545017106, 51.84844026459849, 30.238935374999983, 51.805881066666664, "C", 30.195022831500896, 51.84871380836442, 30.21001848039213, 51.89208088039216, 30.23893537499999, 51.805881066666664, "C", 30.300900908195715, 51.82167399938081, 30.233680463725495, 51.78298530784313, 30.23893537499999, 51.805881066666664, "L", 25.020775374999992, 46.58772106666667, "L", 25.020775374999992, 67.46036106666666, "L", 14.584455374999992, 67.46036106666666, "L", 14.584455374999992, 72.67852106666666, "L", 30.23893537499999, 72.67852106666666, "L", 30.23893537499999, 51.805881066666664, "L", 30.23893537499999, 51.805881066666664, "C", 30.1659756238562, 51.75725791944444, 30.25653422801858, 51.790314887822475, 30.23893537499999, 51.805881066666664, "C", 30.214838565119692, 51.805348186199055, 30.228189570694095, 51.814593144971674, 30.23893537499999, 51.805881066666664, "Z", "M", 36.675042666666684, 36.15140106666667, "C", 36.66938877192984, 36.15852217777779, 36.683837736842115, 36.232238435087716, 36.675042666666684, 36.15140106666667, "C", 36.62522907161752, 36.16435849409559, 36.637568682678435, 36.150097708555904, 36.675042666666684, 36.15140106666667, "C", 36.709412378467036, 36.21112467532528, 36.6356141260877, 36.14085894728216, 36.675042666666684, 36.15140106666667, "L", 25.020775375, 36.15140106666667, "C", 25.020775375, 36.15140106666667, 25.020775375, 41.36956106666667, 25.020775375, 41.36956106666667, "L", 34.38045900000002, 41.40010999999998, "C", 34.39590095833334, 41.37453626666664, 34.356412367647096, 41.40835694117645, 34.38045900000003, 41.40010999999998, "C", 34.3981018650585, 41.42548958654968, 36.68255693818372, 36.12789108513934, 36.675042666666684, 36.15140106666667, "C", 36.68838394676685, 36.137531101892606, 36.71160619357136, 36.10788396302592, 36.675042666666684, 36.15140106666667, "L", 36.675042666666684, 36.15140106666667, "C", 36.58944662153424, 36.223122560440295, 36.6500988987272, 36.13658567554179, 36.675042666666684, 36.15140106666667, "Z"]
                        }, {
                            "t": 900,
                            "v": ["M", 30.243662187499982, 51.803698999999995, "L", 34.641058000000015, 46.585539, "C", 34.59092424782318, 46.621717566229954, 34.56409906646313, 46.61912593640264, 34.641058000000015, 46.585539, "C", 34.60925756399186, 46.48191477189312, 34.67794736625473, 46.63113814064124, 34.64105800000001, 46.585539, "C", 34.770625989108154, 46.61000265181903, 34.52436132720589, 46.45842165756302, 34.641058000000015, 46.585539, "C", 34.57887821413829, 46.650505713622294, 34.68347345220592, 46.62529354411764, 34.641058000000015, 46.585539, "L", 25.025502187499992, 46.585539, "L", 25.025502187499992, 67.458179, "L", 14.589182187499992, 67.458179, "L", 14.589182187499992, 72.676339, "L", 30.24366218749999, 72.676339, "L", 30.24366218749999, 51.803698999999995, "L", 30.24366218749999, 51.803698999999995, "C", 30.479345311274496, 51.90160277083333, 30.21966095859133, 51.865160951238366, 30.24366218749999, 51.803698999999995, "C", 30.324987034056818, 51.78927377092755, 30.37457454002938, 51.77017622675535, 30.243662187499982, 51.803698999999995, "Z", "M", 36.39404000000002, 36.149219, "C", 36.516553684210535, 36.32827733333334, 36.40346328947369, 36.06440189473685, 36.39404000000002, 36.149219, "C", 36.32790471959021, 36.16310195795956, 36.37531787429832, 36.246300402024175, 36.39404000000002, 36.149219, "C", 36.4951504055004, 36.307587866419944, 36.51046013509396, 36.22363815780231, 36.39404000000002, 36.149219, "L", 25.0255021875, 36.149219, "C", 25.0255021875, 36.149219, 25.0255021875, 41.367379, 25.0255021875, 41.367379, "L", 40.6799821875, 41.367379, "C", 40.756715, 41.31855, 40.43993222426471, 41.41497429411763, 40.679982187499995, 41.36737899999998, "C", 40.31317097149122, 40.884383557017514, 36.37656457662541, 36.166886876934996, 36.39404000000002, 36.149219, "C", 36.40833422867877, 36.13435832345636, 36.43321520739788, 36.10259353181348, 36.39404000000001, 36.149219, "L", 36.39404000000001, 36.149219, "C", 36.38804423735812, 36.18320631475747, 36.388743105779156, 36.15477393808049, 36.39404000000002, 36.149219, "Z"]
                        }, {
                            "t": 1000,
                            "v": ["M", 36.12428700000002, 51.83642999999999, "L", 38.70674600000002, 49.260715999999974, "C", 38.72309826434474, 49.26439127064526, 38.729398870894016, 49.29654099882946, 38.706746000000024, 49.260715999999974, "C", 38.72490766825799, 49.30643309001932, 40.70631365733837, 46.66690908335065, 40.666965000000005, 46.618269999999995, "C", 40.69876338838203, 46.64436456194029, 40.629485882352945, 46.694402968067216, 40.666965000000005, 46.618269999999995, "C", 40.61838389508084, 46.631517694530444, 40.657883882352955, 46.608591647058816, 40.666965, 46.618269999999995, "L", 25.012484999999998, 46.618269999999995, "L", 25.012484999999998, 67.49091, "L", 14.576164999999998, 67.49091, "L", 14.576164999999998, 72.70907, "L", 30.230644999999996, 72.70907, "L", 30.230644999999996, 51.83642999999999, "L", 36.12428700000002, 51.83642999999999, "C", 36.12944606535949, 51.836693222222216, 36.15076888916411, 51.70783634798759, 36.12428700000002, 51.83642999999999, "C", 36.227490467728174, 51.689639863554596, 36.42769473184528, 51.854513298603, 36.124287000000024, 51.83642999999999, "Z", "M", 40.666965000000005, 36.18195, "C", 40.79764626315789, 36.37294555555556, 40.67701650877193, 36.091478421052635, 40.666965000000005, 36.18195, "C", 40.57554163422954, 36.16613875515686, 40.64699473258486, 36.16512922882578, 40.666965, 36.18195, "C", 40.77481609920041, 36.15896412418127, 40.599233810766876, 36.261330434989134, 40.666965000000005, 36.18195, "L", 25.012485000000005, 36.18195, "C", 25.012485000000005, 36.18195, 25.012485000000005, 41.40011, 25.012485000000005, 41.40011, "L", 40.666965000000005, 41.40011, "C", 45.208738000000004, 41.40011, 44.70658870588237, 40.65490464705881, 44.96264200000001, 40.98796099999998, "C", 44.889341502923976, 40.92472599415202, 40.92313988173376, 36.405201068730655, 40.666965000000005, 36.18195, "C", 39.31950817725734, 36.143386078353444, 40.53814922122441, 36.14489883393437, 40.666965000000005, 36.18195, "L", 40.666965000000005, 36.18195, "C", 40.83090765318198, 36.18981380240797, 40.803263779497755, 36.13109660061919, 40.666965000000005, 36.18195, "Z"]
                        }, {
                            "t": 1100,
                            "v": ["M", 40.60908, 51.83642999999999, "L", 40.609080000000006, 51.83642999999999, "C", 40.701600655866265, 52.125169975060615, 40.65763292532487, 51.687325123756324, 40.60908, 51.83642999999999, "C", 40.42488464752408, 51.57976515814555, 46.31180688592204, 46.636032963560076, 46.27000000000002, 46.618269999999995, "C", 45.849575787655915, 46.85849547206157, 45.51795600000003, 46.89921702857142, 46.270000000000024, 46.618269999999995, "C", 45.899632576023414, 46.7306356754386, 46.013395, 46.510836, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 40.60765644444444, 51.734963611111105, 40.53400044473686, 52.01283949473682, 40.609080000000006, 51.83642999999999, "C", 40.30586743446116, 51.78029254252676, 40.93484127758558, 51.855643504765695, 40.609080000000006, 51.83642999999999, "Z", "M", 42.82145777777778, 36.18195, "C", 42.96030661988303, 36.384882777777776, 46.28067972807019, 35.79592616959064, 46.27000000000002, 35.89205222222222, "C", 42.91777311136889, 37.351335149576386, 46.279533528371424, 36.91514615284961, 46.27000000000002, 35.89205222222222, "C", 45.86181310540046, 35.902974104164805, 46.169271173939805, 35.86651971217596, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 47.797316000000016, 40.46763922222222, 50.37575200000001, 35.89205222222222, "C", 50.605386409356726, 35.661920903508765, 46.182350186842136, 36.12925648274854, 46.27000000000002, 35.89205222222222, "C", 44.83832712583594, 35.851078055472755, 42.68459101282871, 36.142583136055265, 42.82145777777778, 36.18195, "L", 42.82145777777778, 36.18195, "C", 42.99564684678363, 36.19030529005847, 42.96627523099414, 36.127918263157895, 42.82145777777778, 36.18195, "Z"]
                        }, {
                            "t": 1200,
                            "v": ["M", 53.462231999999986, 49.40010999999998, "L", 53.462231999999986, 49.40010999999998, "C", 53.56019504738779, 49.70583467947593, 53.51364097975573, 49.24223424868315, 53.46223199999998, 49.40010999999998, "C", 53.26720162679018, 49.12834722627174, 51.08966611450569, 45.63891784376947, 51.045400000000015, 45.620109999999976, "C", 51.57156118692979, 45.64695697041812, 51.04540000000001, 45.74254897142855, 51.04540000000001, 45.620109999999976, "C", 50.99450931578948, 45.68661142105262, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 48.462336, 51.728995, 50.53887364736842, 51.64017934736838, 53.46223199999998, 49.40010999999998, "C", 53.36869175413531, 48.65244186855774, 53.585347588031766, 49.64796312269308, 53.46223199999998, 49.40010999999998, "Z", "M", 44.1794, 36.18195, "C", 44.32641642105262, 36.39682, 44.190707947368416, 36.080169473684215, 44.179399999999994, 36.18195, "C", 43.29787099999999, 36.289385, 43.96453000000001, 36.271853894736836, 44.1794, 36.18195, "C", 43.74966099999999, 36.267334, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 51.28854231578947, 31.058790368421047, 51.2964526684211, 31.10119380526316, 51.045400000000015, 30.96379, "C", 51.045400000000015, 30.96379, 51.045400000000015, 30.96379, 51.045400000000015, 30.96379, "L", 44.1794, 36.18195, "C", 44.25008077894736, 36.418306189473675, 44.21898142105263, 36.238494631578945, 44.1794, 36.18195, "Z"]
                        }, {
                            "t": 1300,
                            "v": ["M", 60.43808799999999, 41.40010999999998, "L", 54.176295999999994, 41.40010999999998, "C", 54.27970143890934, 41.722819383891256, 54.23056103418661, 41.233463373609986, 54.17629599999999, 41.40010999999998, "C", 53.97043060605631, 41.113249294397946, 54.109617731978204, 41.64676889064555, 54.17629599999999, 41.40010999999998, "C", 54.25239058620364, 41.428448468774675, 54.176295999999994, 40.87461491428571, 54.176295999999994, 41.40011, "C", 49.01942399999999, 45.300338, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 52.11512, 51.83642999999999, 56.78530385, 45.960488199999965, 60.43808799999999, 41.40010999999998, "C", 60.33935107380951, 41.250129194588716, 60.26902973181133, 41.434925518398245, 60.438087999999986, 41.40010999999998, "Z", "M", 45.82724, 30.963789999999996, "C", 47.116457999999994, 30.963789999999996, 45.61237, 30.856355000000004, 45.82724, 30.96379, "C", 48.70593, 30.96379, 45.82724, 30.878406, 45.82724, 30.96379, "C", 45.82724, 33.84248, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 50.508226, 26.280767999999995, 48.99514615000005, 25.47399734999998, 49.050000000000026, 25.328959999999977, "C", 49.050000000000026, 25.328959999999977, 49.050000000000026, 25.328959999999977, 49.050000000000026, 25.328959999999977, "L", 45.82724, 30.963789999999996, "C", 46.0152511, 30.759663699999987, 47.11645800000001, 29.889441999999995, 45.82724, 30.963789999999996, "Z"]
                        }, {
                            "t": 1400,
                            "v": ["M", 61.481719999999996, 34.18010999999998, "L", 56.26356, 30.963789999999992, "C", 56.37240783043089, 31.303484088306607, 56.320681088617484, 30.78837249853685, 56.26355999999999, 30.96379, "C", 56.04685958532244, 30.661831362524183, 56.19337129681915, 30.88416251646904, 56.26355999999999, 30.96379, "C", 56.68121324863541, 30.76744101976285, 56.26356, 30.864708857142855, 56.26356, 30.96379, "C", 56.26356, 39.59115, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 52.11512, 51.83642999999999, 59.33302300000001, 44.93410599999997, 61.481719999999996, 34.18010999999998, "C", 61.71705376190475, 34.28854809956707, 61.71598603348562, 34.44293686147184, 61.48171999999999, 34.18010999999998, "Z", "M", 40.609080000000006, 25.74563, "C", 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, "C", 43.487770000000005, 25.74563, 45.82724, 28.085099999999997, 45.82724, 30.96379, "C", 45.82724, 33.84248, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 51.04540000000001, 25.206419999999994, 47.37484700000005, 22.39676299999998, 45.70000000000003, 21.000109999999978, "C", 45.70000000000003, 21.000109999999978, 45.70000000000003, 21.000109999999978, 45.70000000000003, 21.000109999999978, "L", 45.70000000000003, 21.080109999999976, "C", 44.08847800000004, 23.013935999999973, 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, "Z"]
                        }, {
                            "t": 1500,
                            "v": ["M", 60.70000000000003, 25.74563, "L", 55.551992727272726, 25.74563, "C", 55.666282949225156, 26.102308792721942, 55.6119698703211, 25.561441623463693, 55.55199272727273, 25.74563, "C", 55.3244572918613, 25.42857343065039, 55.478294588932854, 25.66202114229249, 55.55199272727273, 25.74563, "C", 55.10793363833993, 25.877882770750986, 56.26356, 25.989214999999998, 56.26356, 30.96379, "C", 56.26356, 39.59115, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 52.11512, 51.83642999999999, 61.481719999999996, 42.469829999999995, 61.481719999999996, 30.963789999999992, "C", 61.051981, 25.787010454545445, 60.37067733515994, 26.02159820454546, 60.700000000000024, 25.74563, "Z", "M", 30.172759999999997, 25.74563, "C", 30.172759999999997, 25.74563, 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, "C", 43.487770000000005, 25.74563, 45.82724, 28.085099999999997, 45.82724, 30.96379, "C", 45.82724, 33.84248, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 51.04540000000001, 25.206419999999994, 46.36645000000001, 20.527469999999994, 40.609080000000006, 20.527469999999994, "C", 40.609080000000006, 20.527469999999994, 38.00000000000003, 20.527469999999994, 38.00000000000003, 20.527469999999994, "L", 36.00000000000003, 20.527469999999994, "C", 36.00000000000003, 20.527469999999994, 30.172759999999997, 25.74563, 30.172759999999997, 25.74563, "Z"]
                        }, {
                            "t": 1600,
                            "v": ["M", 59.60000000000002, 20.076127391304325, "L", 50.14209391304349, 20.076127391304325, "C", 50.26182652651747, 20.449790888441598, 50.20072711052272, 20.10827004445677, 50.137893913043484, 20.076127391304325, "C", 50.124625361660065, 20.08162469960473, 51.86569843478266, 20.55128982608694, 50.142093913043496, 20.076127391304325, "C", 53.430440391304366, 22.240591913043456, 56.26356, 22.33643, 56.26356, 30.96379, "C", 56.26356, 39.59115, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 52.11512, 51.83642999999999, 61.481719999999996, 42.469829999999995, 61.481719999999996, 30.963789999999992, "C", 61.481719999999996, 23.72483799999999, 56.60870701778657, 20.477787891304327, 56.26356, 20.076127391304325, "Z", "M", 20.378507000000024, 25.74563, "C", 20.378507000000024, 25.74563, 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, "C", 43.487770000000005, 25.74563, 45.82724, 28.085099999999997, 45.82724, 30.96379, "C", 45.82724, 33.84248, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 51.04540000000001, 25.206419999999994, 46.36645000000001, 20.527469999999994, 40.609080000000006, 20.527469999999994, "C", 40.609080000000006, 20.527469999999994, 24.954600000000006, 20.527469999999994, 24.954600000000006, 20.527469999999994, "L", 24.954600000000006, 20.527469999999994, "C", 24.954600000000006, 20.527469999999994, 20.378507000000024, 25.74563, 20.378507000000024, 25.74563, "Z"]
                        }, {
                            "t": 1700,
                            "v": ["M", 50.59164695652174, 15.08243347826087, "L", 50.59164695652174, 15.08243347826087, "C", 51.37934607539924, 15.473890475261822, 42.171737254502084, 14.794566951335664, 43.61000000000003, 15.08319869565215, "C", 47.97327223188406, 17.15387230434781, 51.88416792753628, 20.09789921739128, 51.045400000000015, 19.600109999999976, "C", 49.030068739130456, 17.785121260869538, 56.26356, 22.33643, 56.26356, 30.96379, "C", 56.26356, 39.59115, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 52.11512, 51.83642999999999, 61.481719999999996, 42.469829999999995, 61.481719999999996, 30.963789999999992, "C", 61.481719999999996, 19.45774999999999, 48.17050726086957, 13.724944999999979, 50.59164695652174, 15.310109999999977, "Z", "M", 19.73644, 25.74563, "C", 19.73644, 25.74563, 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, "C", 43.487770000000005, 25.74563, 45.82724, 28.085099999999997, 45.82724, 30.96379, "C", 45.82724, 33.84248, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 51.04540000000001, 25.206419999999994, 46.36645000000001, 20.527469999999994, 40.609080000000006, 20.527469999999994, "C", 40.609080000000006, 20.527469999999994, 14.518280000000004, 20.527469999999994, 14.518280000000004, 20.527469999999994, "L", 14.518279999999999, 20.527469999999994, "C", 14.518279999999999, 20.527469999999994, 19.73644, 25.74563, 19.73644, 25.74563, "Z"]
                        }, {
                            "t": 1800,
                            "v": ["M", 40.60908, 10.09115, "L", 37.060731200000035, 10.09115, "C", 37.060731200000035, 10.09115, 40.60908, 15.30931, 40.60908, 15.30931, "C", 40.60908, 15.30931, 40.60908, 15.30931, 40.60908, 15.30931, "C", 49.23644, 15.30931, 56.26356, 22.33643, 56.26356, 30.96379, "C", 56.26356, 39.59115, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 52.11512, 51.83642999999999, 61.481719999999996, 42.469829999999995, 61.481719999999996, 30.963789999999992, "C", 61.481719999999996, 19.45774999999999, 52.11512, 10.091149999999992, 40.60907999999999, 10.091149999999992, "Z", "M", 19.73644, 25.74563, "C", 19.73644, 25.74563, 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, "C", 43.487770000000005, 25.74563, 45.82724, 28.085099999999997, 45.82724, 30.96379, "C", 45.82724, 33.84248, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 51.04540000000001, 25.206419999999994, 46.36645000000001, 20.527469999999994, 40.609080000000006, 20.527469999999994, "C", 40.609080000000006, 20.527469999999994, 14.518280000000004, 20.527469999999994, 14.518280000000004, 20.527469999999994, "L", 14.518280000000004, 36.18195, "C", 14.518280000000004, 36.18195, 19.73644, 30.963789999999992, 19.73644, 30.963789999999992, "Z"]
                        }, {
                            "t": 1900,
                            "v": ["M", 40.60908, 10.09115, "L", 29.570664615384615, 10.091149999999992, "C", 29.570664615384615, 10.091149999999992, 38.00000000000003, 15.30931, 38.00000000000003, 15.30931, "C", 38.00000000000003, 15.30931, 40.60908, 15.30931, 40.60908, 15.30931, "C", 49.23644, 15.30931, 56.26356, 22.33643, 56.26356, 30.96379, "C", 56.26356, 39.59115, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 52.11512, 51.83642999999999, 61.481719999999996, 42.469829999999995, 61.481719999999996, 30.963789999999992, "C", 61.481719999999996, 19.45774999999999, 52.11512, 10.091149999999992, 40.60907999999999, 10.091149999999992, "Z", "M", 19.73644, 25.74563, "C", 19.73644, 25.74563, 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, "C", 43.487770000000005, 25.74563, 45.82724, 28.085099999999997, 45.82724, 30.96379, "C", 45.82724, 33.84248, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 51.04540000000001, 25.206419999999994, 46.36645000000001, 20.527469999999994, 40.609080000000006, 20.527469999999994, "C", 40.609080000000006, 20.527469999999994, 14.518280000000004, 20.527469999999994, 14.518280000000004, 20.527469999999994, "L", 14.518280000000004, 46.618269999999995, "C", 14.518280000000004, 46.618269999999995, 19.73644, 41.40011, 19.73644, 41.40011, "Z"]
                        }, {
                            "t": 2000,
                            "v": ["M", 40.60908, 10.09115, "L", 24.568069629629633, 10.09115, "C", 24.568069629629633, 10.09115, 30.172759999999997, 15.30931, 30.172759999999997, 15.30931, "C", 30.172759999999997, 15.30931, 40.60908, 15.30931, 40.60908, 15.30931, "C", 49.23644, 15.30931, 56.26356, 22.33643, 56.26356, 30.96379, "C", 56.26356, 39.59115, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 52.11512, 51.83642999999999, 61.481719999999996, 42.469829999999995, 61.481719999999996, 30.963789999999992, "C", 61.481719999999996, 19.45774999999999, 52.11512, 10.091149999999992, 40.60907999999999, 10.091149999999992, "Z", "M", 19.73644, 25.74563, "C", 19.73644, 25.74563, 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, "C", 43.487770000000005, 25.74563, 45.82724, 28.085099999999997, 45.82724, 30.96379, "C", 45.82724, 33.84248, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 51.04540000000001, 25.206419999999994, 46.36645000000001, 20.527469999999994, 40.609080000000006, 20.527469999999994, "C", 40.609080000000006, 20.527469999999994, 14.518280000000004, 20.527469999999994, 14.518280000000004, 20.527469999999994, "L", 14.518280000000004, 51.83642999999999, "C", 14.518280000000004, 51.83642999999999, 19.73644, 46.618269999999995, 19.73644, 46.618269999999995, "Z"]
                        }, {
                            "t": 2100,
                            "v": ["M", 40.60908, 10.09115, "L", 19.550077142857145, 10.09115, "C", 19.550077142857145, 10.09115, 24.954600000000006, 15.30931, 24.954600000000006, 15.30931, "C", 24.954600000000006, 15.30931, 40.60908, 15.30931, 40.60908, 15.30931, "C", 49.23644, 15.30931, 56.26356, 22.33643, 56.26356, 30.96379, "C", 56.26356, 39.59115, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 52.11512, 51.83642999999999, 61.481719999999996, 42.469829999999995, 61.481719999999996, 30.963789999999992, "C", 61.481719999999996, 19.45774999999999, 52.11512, 10.091149999999992, 40.60907999999999, 10.091149999999992, "Z", "M", 19.73644, 25.74563, "C", 19.73644, 25.74563, 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, "C", 43.487770000000005, 25.74563, 45.82724, 28.085099999999997, 45.82724, 30.96379, "C", 45.82724, 33.84248, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 51.04540000000001, 25.206419999999994, 46.36645000000001, 20.527469999999994, 40.609080000000006, 20.527469999999994, "C", 40.609080000000006, 20.527469999999994, 14.518280000000004, 20.527469999999994, 14.518280000000004, 20.527469999999994, "L", 14.518280000000004, 57.115626035714264, "C", 14.518280000000004, 57.115626035714264, 19.73644, 51.83642999999999, 19.73644, 51.83642999999999, "Z"]
                        }, {
                            "t": 2200,
                            "v": ["M", 40.60908, 10.09115, "L", 14.518279999999997, 10.09115, "C", 14.518279999999997, 10.09115, 19.73644, 15.30931, 19.73644, 15.30931, "C", 19.73644, 15.30931, 40.60908, 15.30931, 40.60908, 15.30931, "C", 49.23644, 15.30931, 56.26356, 22.33643, 56.26356, 30.96379, "C", 56.26356, 39.59115, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 52.11512, 51.83642999999999, 61.481719999999996, 42.469829999999995, 61.481719999999996, 30.963789999999992, "C", 61.481719999999996, 19.45774999999999, 52.11512, 10.091149999999992, 40.60907999999999, 10.091149999999992, "Z", "M", 19.73644, 25.74563, "C", 19.73644, 25.74563, 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, "C", 43.487770000000005, 25.74563, 45.82724, 28.085099999999997, 45.82724, 30.96379, "C", 45.82724, 33.84248, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 51.04540000000001, 25.206419999999994, 46.36645000000001, 20.527469999999994, 40.609080000000006, 20.527469999999994, "C", 40.609080000000006, 20.527469999999994, 14.518280000000004, 20.527469999999994, 14.518280000000004, 20.527469999999994, "L", 14.518280000000004, 62.24562599999998, "C", 14.518280000000004, 62.24562599999998, 19.73644, 57.504416999999975, 19.73644, 57.504416999999975, "Z"]
                        }, {
                            "t": 2300,
                            "v": ["M", 40.60908, 10.09115, "L", 14.518279999999997, 10.09115, "C", 14.518279999999997, 10.09115, 14.518279999999997, 15.30931, 14.518279999999997, 15.30931, "C", 14.518279999999997, 15.30931, 40.60908, 15.30931, 40.60908, 15.30931, "C", 49.23644, 15.30931, 56.26356, 22.33643, 56.26356, 30.96379, "C", 56.26356, 39.59115, 49.23644, 46.618269999999995, 40.60908, 46.618269999999995, "L", 24.9546, 46.618269999999995, "L", 24.9546, 67.49091, "L", 14.518279999999999, 67.49091, "L", 14.518279999999999, 72.70907, "L", 30.172759999999997, 72.70907, "L", 30.172759999999997, 51.83642999999999, "L", 40.60908, 51.83642999999999, "C", 52.11512, 51.83642999999999, 61.481719999999996, 42.469829999999995, 61.481719999999996, 30.963789999999992, "C", 61.481719999999996, 19.45774999999999, 52.11512, 10.091149999999992, 40.60907999999999, 10.091149999999992, "Z", "M", 19.73644, 25.74563, "C", 19.73644, 25.74563, 40.609080000000006, 25.74563, 40.609080000000006, 25.74563, "C", 43.487770000000005, 25.74563, 45.82724, 28.085099999999997, 45.82724, 30.96379, "C", 45.82724, 33.84248, 43.487770000000005, 36.18195, 40.609080000000006, 36.18195, "L", 24.954600000000006, 36.18195, "C", 24.954600000000006, 36.18195, 24.954600000000006, 41.40011, 24.954600000000006, 41.40011, "L", 40.609080000000006, 41.40011, "C", 46.36645000000001, 41.40011, 51.04540000000001, 36.72116, 51.04540000000001, 30.963789999999996, "C", 51.04540000000001, 25.206419999999994, 46.36645000000001, 20.527469999999994, 40.609080000000006, 20.527469999999994, "C", 40.609080000000006, 20.527469999999994, 14.518280000000004, 20.527469999999994, 14.518280000000004, 20.527469999999994, "L", 14.518280000000004, 62.24562599999998, "C", 14.518280000000004, 62.24562599999998, 19.73644, 62.24562599999998, 19.73644, 62.24562599999998, "Z"]
                        }]
                    }
                }
            }], "options": {"start": "load", "hover": "freeze"}
        })]]>
